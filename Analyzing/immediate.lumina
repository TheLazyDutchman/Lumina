import "../std/string.lumina"
import "../std/collections.lumina"

import "position.lumina"
import "whitespace.lumina"


type String {
	WhiteSpace space;
	Region region;
	str value;

	int id;
}

type Character {
	WhiteSpace space;
	Region region;
	char value;
}

type Number {
	WhiteSpace space;
	Region region;
	int value;
}

func createString(Position start, Position end, WhiteSpace space) -> String {
	var string = new String();

	string.region = createRegion(start, end);
	string.space = space;

	var length = end.index - start.index;

	var stringStart = (str)((int)start.buffer + start.index + 1);
	string.value = strndup(stringStart, length - 2);

	string.id = -1;
	
	return string;
}

func createCharacter(Position start, Position end, WhiteSpace space) -> Character {
	var character = new Character();

	character.region = createRegion(start, end);
	character.space = space;

	character.value = unEscapeCharacter((str)((int)start.buffer + start.index + 1));
	
	return character;
}

func createNumber(Position start, Position end, WhiteSpace space) -> Number {
	var number = new Number();

	number.region = createRegion(start, end);
	number.space = space;
	
	var length = end.index - start.index;

	var numberStart = (str)((int)start.buffer + start.index);
	number.value = strToInt(numberStart, length);

	return number;
}

func findString(Array<str> array, str string) -> int {
	var i = 0;
	while (i < array.size) {
		if (streq(getItem<str>(array, i), string)) {
			return i;
		}
		i = i + 1;
	}
	return -1;
}

func addUniqueString(Array<str> array, str string) -> int {
	var index = findString(array, string);
	if (index != -1) {
		return index;
	}

	addItem<str>(array, string);

	return array.size - 1;
}

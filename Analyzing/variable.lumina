import "position.lumina"
import "name.lumina"
import "operator.lumina"


type VariableDefinition {
	Region region;

	Name keyword;
	Name name;
	Operator equalSign;
	Operation value;
	Operator semicolon;
}

type VariableList {
	int size;
	int maxSize;
	VariableDefinition[] list;
}

func createVariableDefinition(Name keyword, Name name, Operator equalSign, Operation value, Operator semicolon) -> VariableDefinition {
	var variable = (VariableDefinition)malloc(sizeof(VariableDefinition));

	variable.region = createRegion(keyword.region.start, semicolon.position);

	variable.keyword = keyword;
	variable.name = name;
	variable.equalSign = equalSign;
	variable.value = value;
	variable.semicolon = semicolon;

	return variable;
}

func createVariableList() -> VariableList {
	var list = (VariableList)malloc(sizeof(VariableList));

	list.size = 0;
	list.maxSize = 8;
	list.list = (VariableDefinition[])malloc(8 * 8);

	return list;
}

func addVariable(VariableList list, VariableDefinition variable) {
	list.list[list.size] = variable;
	list.size = list.size + 1;

	if (list.size == list.maxSize) {
		list.list = (VariableDefinition[])realloc((ptr)list.list, list.maxSize * 8, list.maxSize * 8 * 2);
		list.maxSize = list.maxSize * 2;
	}
}

func findVariable(VariableList list, str name) -> VariableDefinition {
    var i = 0;
    while (i < list.size) {
	if (streq(list.list[i].name.name, name)) {
	    return list.list[i];
	}
	i = i + 1;
    }
    return (VariableDefinition)0;
}

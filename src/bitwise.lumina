import "parser.lumina"
import "lexer.lumina"
import "position.lumina"
import "index.lumina"
import "operator.lumina"
import "block.lumina"


type Bitwise {
	Region region;

	Index left;
	Operator comparator;
	Index right;


	func parseBitwise(Bitwise self, Parser parser, Lexer lexer, Block block) -> Bitwise {
		self.region = lexer.startRegion();

		self.left = new Index();
		self.left.parseIndex(parser, lexer, block);

		self.comparator = lexer.consumePrecedence(PREC_bitwise);
		if (self.comparator != (Operator)0) {
			self.right = new Index();
			self.right.parseIndex(parser, lexer, block);
		}

		lexer.endRegion(self.region);

		return self;
	}

	func bindBitwise(Bitwise self, Parser parser) {
		self.left.bindIndex(parser);

		if (self.right != (Index)0) {
			self.right.bindIndex(parser);
		}
	}
}

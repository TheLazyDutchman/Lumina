import "parser.lumina"
import "lexer.lumina"
import "block.lumina"
import "position.lumina"
import "term.lumina"
import "operator.lumina"


type Comparison {
	Region region;

	Term left;
	Operator comparator;
	Term right;


	func parseComparison(Comparison self, Parser parser, Lexer lexer, Block block) -> Comparison {
		self.region = lexer.startRegion();

		self.left = new Term();
		self.left.parseTerm(parser, lexer, block);

		self.comparator = lexer.consumePrecedence(PREC_comparison);
		if (self.comparator != (Operator)0) {
			self.right = new Term();
			self.right.parseTerm(parser, lexer, block);
		}

		lexer.endRegion(self.region);

		return self;
	}

	func bindComparison(Comparison self, Parser parser) {
		self.left.bindTerm(parser);

		if (self.right != (Term)0) {
			self.right.bindTerm(parser);
		}
	}
}

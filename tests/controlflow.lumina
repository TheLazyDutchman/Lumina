const SYS_write = 1;
const STDOUT = 1;
var a = 10;
var b = 20;

if (a == b) {
	syscall(SYS_write, STDOUT, SYS_write, STDOUT, "equal\n", 6, 0, 0, 0);
} else if (a < b) {
	syscall(SYS_write, STDOUT, "less\n", 5, 0, 0, 0);
} else if (a > b) {
	syscall(SYS_write, STDOUT, "greater\n", 8, 0, 0, 0);
} else {
	syscall(SYS_write, STDOUT, "unreachable\n", 12, 0, 0, 0);
}

if (a == a) {
	syscall(SYS_write, STDOUT, "identity\n", 9, 0, 0, 0);
}

if (a < b && b < b) {
	syscall(SYS_write, STDOUT, "should not happen\n", 18, 0, 0, 0);
}

if (b < b && a < b) {
	syscall(SYS_write, STDOUT, "should still not happen\n", 24, 0, 0, 0);
}

if (a < b && b > a) {
	syscall(SYS_write, STDOUT, "and works\n", 10, 0, 0, 0);
}

if (b < b || a < b) {
	syscall(SYS_write, STDOUT, "should be true\n", 15, 0, 0, 0);
}

if (a < b || b < a) {
	syscall(SYS_write, STDOUT, "should have jumped\n", 19, 0, 0, 0);
}

if (a > b || b != b) {
	syscall(SYS_write, STDOUT, "should not have worked\n", 23, 0, 0, 0);
}

while (a < b) {
	syscall(SYS_write, STDOUT, "am looping\n", 11, 0, 0, 0);

	var i = 0;
	while (i < 3) {
		syscall(SYS_write, STDOUT, "nested loop\n", 12, 0, 0, 0);
		i = i + 1;
	}
	a = a + 1;
}

if (1 < b) {
	if (a >= a) {
		syscall(SYS_write, STDOUT, "nested if\n", 10, 0, 0, 0);
	}
}
